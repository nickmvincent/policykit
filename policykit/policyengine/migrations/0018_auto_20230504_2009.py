# Generated by Django 3.2.2 on 2023-05-04 20:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('policyengine', '0017_alter_policy_community'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, default='', unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('codes', models.TextField(blank=True, default='')),
                ('variables', models.TextField(blank=True, default='[]')),
                ('data', models.TextField(blank=True, default='[]')),
            ],
        ),
        migrations.CreateModel(
            name='CustomAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_trigger', models.BooleanField(default=False)),
                ('filter', models.TextField(blank=True, default='[]')),
                ('community_name', models.TextField(null=True, unique=True)),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='policyengine.actiontype')),
            ],
        ),
        migrations.AddField(
            model_name='policyvariable',
            name='entity',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='policyvariable',
            name='is_list',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='policyvariable',
            name='type',
            field=models.CharField(choices=[('number', 'number'), ('string', 'string'), ('float', 'float'), ('timestamp', 'timestamp')], default='string', max_length=30),
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('platform', models.TextField(blank=True, choices=[('Slack', 'Slack'), ('Discord', 'Discord'), ('Discourse', 'Discourse'), ('Github', 'Github'), ('Opencollective', 'OpenCollective'), ('Reddit', 'Reddit'), ('All', 'All')], default='')),
                ('initialize', models.TextField(blank=True, default='[]')),
                ('notify', models.TextField(blank=True, default='[]')),
                ('check', models.TextField(blank=True, default='\\{\\}')),
                ('success', models.TextField(blank=True, default='[]')),
                ('fail', models.TextField(blank=True, default='[]')),
                ('variables', models.TextField(blank=True, default='[]')),
                ('data', models.TextField(blank=True, default='[]')),
            ],
            options={
                'unique_together': {('name', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='PolicyTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('kind', models.CharField(choices=[('platform', 'platform'), ('constitution', 'constitution'), ('trigger', 'trigger')], max_length=30)),
                ('is_trigger', models.BooleanField(default=False)),
                ('extra_check', models.TextField(blank=True, default='[]')),
                ('extra_executions', models.TextField(blank=True, default='{}')),
                ('variables', models.TextField(blank=True, default='[]')),
                ('data', models.TextField(blank=True, default='[]')),
                ('action_types', models.ManyToManyField(to='policyengine.ActionType')),
                ('custom_actions', models.ManyToManyField(to='policyengine.CustomAction')),
                ('procedure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='policyengine.procedure')),
            ],
        ),
        migrations.CreateModel(
            name='FilterModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.TextField(blank=True, default='')),
                ('name', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('platform', models.TextField(blank=True, choices=[('Slack', 'Slack'), ('Discord', 'Discord'), ('Discourse', 'Discourse'), ('Github', 'Github'), ('Opencollective', 'OpenCollective'), ('Reddit', 'Reddit'), ('All', 'All')], default='All')),
                ('variables', models.TextField(blank=True, default='[]')),
                ('codes', models.TextField(blank=True, default='')),
            ],
            options={
                'unique_together': {('kind', 'name')},
            },
        ),
    ]
